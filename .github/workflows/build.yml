name: Build

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
    secrets:
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true

jobs:
  build:
    name: ${{ matrix.title }}
    strategy:
      # max-parallel: 10
      fail-fast: false
      matrix: ${{ fromJSON(inputs.matrix) }}
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Unity
        uses: js6pak/unity-setup@main
        with:
          version-file: 'None'
          unity-version: ${{ matrix.unity_version }}
          modules: ${{ matrix.modules }}
          install-path: '${{ runner.tool_cache }}/unity'

      - name: Activate Unity
        uses: js6pak/activate-unity-license@unity5
        with:
          license: 'Personal'
          username: ${{ secrets.UNITY_EMAIL }}
          password: ${{ secrets.UNITY_PASSWORD }}
          license-version: ${{ startsWith(matrix.unity_version, '5.') && '5.x' || '' }}

      - name: Install Linux dependencies
        if: startsWith(matrix.runner, 'ubuntu-')
        run: |
          echo "deb https://archive.ubuntu.com/ubuntu jammy main universe" | sudo tee /etc/apt/sources.list.d/jammy.list
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libgtk2.0-0 libglu1-mesa libgconf-2-4

          curl -LO https://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb
          sudo dpkg -i libssl1.1_1.1.0g-2ubuntu4_amd64.deb

          # https://discussions.unity.com/t/linux-editor-stuck-on-loading-because-of-bee-backend-w-workaround/854480
          UNITY_EDITOR_DATA_PATH="$(dirname "$UNITY_EDITOR_PATH")"/Data
          if [[ -f "$UNITY_EDITOR_DATA_PATH"/bee_backend && ! -f "$UNITY_EDITOR_DATA_PATH"/.bee_backend ]]; then
              mv "$UNITY_EDITOR_DATA_PATH"/{,.}bee_backend
              cat >"$UNITY_EDITOR_DATA_PATH"/bee_backend <<'EOF'
          #!/usr/bin/env bash
          args=("$@")
          for ((i = 0; i < "${#args[@]}"; ++i)); do
              case ${args[i]} in
              --stdin-canary)
                  unset args[i]
                  break
                  ;;
              esac
          done
          "$(dirname "$0")/.$(basename "$0")" "${args[@]}"
          EOF
              chmod +x "$UNITY_EDITOR_DATA_PATH"/bee_backend
              echo "Wrapped bee_backend"
          fi

      - name: Build
        uses: js6pak/unity-action@main
        with:
          project-path: ${{ github.workspace }}
          args: '-quit -executeMethod UnityPlayerBuildTools.StartCommandLineBuild -buildTarget ${{ matrix.build_target }} -scriptingBackend ${{ matrix.scripting_implementation }} ${{ matrix.extra_args }}'
        timeout-minutes: 60

      - name: Upload builds
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: TestGame ${{ matrix.title }}
          path: ./Builds/*/*

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          retention-days: 1
          name: Logs ${{ matrix.title }}
          path: |
            ${{ github.workspace }}/**/*.log

      - name: Setup tmate session
        if: failure() && github.run_attempt != 1
        uses: mxschmitt/action-tmate@7b6a61a73bbb9793cb80ad69b8dd8ac19261834c # v3.22
